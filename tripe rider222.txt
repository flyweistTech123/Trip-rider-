import React, { useState, useEffect } from "react";
import "react-toastify/dist/ReactToastify.css";
import "./LiveChart.css";
import HOC from "../../Components/HOC/HOC";
import { IoIosArrowDown } from "react-icons/io";
import plus from "../../Images/Vector.png";
import chat from "../../Images/chat.png";
import share from "../../Images/share.png";
import send from "../../Images/send.png";
import {
  collection,
  query,
  where,
  getDocs,
  setDoc,
  doc,
  orderBy,
  updateDoc,
  serverTimestamp,
  getDoc,
} from "firebase/firestore";
import { db, auth } from "../../Components/Firebase/Firebase";

import { BaseUrl, getAuthHeaders } from "../../Components/BaseUrl/BaseUrl";
import axios from "axios";

const LiveChart = () => {
  const [messages, setMessages] = useState([]);
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);
  const [userIdByMe,setUserIdByMe]=useState('');

  useEffect(() => {
    fetchMessages();
  }, [userIdByMe]);

  useEffect(() => {
    fetchRiderData();
  }, []);
  const fetchMessages = async () => {
    console.log("boss",userIdByMe);
    try {
      if (!userIdByMe) return;

    //   console.log("hkahdk", selectedUser.id);

      // Fetch messages based on the selected user
      const messagesRef = collection(
        db,
        "chatwithadmin",
        userIdByMe,
        "messages"
      );
      const q = query(messagesRef, orderBy("timestamp", "desc"));
      const querySnapshot = await getDocs(q);

      const allMessages = [];
      querySnapshot.forEach((doc) => {
        allMessages.push({ id: doc.id, ...doc.data() });
      });
      setMessages(allMessages);
      console.log("hello", allMessages);
    } catch (error) {
      console.error("Error fetching messages:", error);
    }
  };

  const fetchRiderData = () => {
    axios
      .get(`${BaseUrl}api/v1/admin/all/user`, getAuthHeaders())
      .then((response) => {
        setUsers(response.data.category);
      })
      .catch((error) => {
        console.error("Error fetching rider data:", error);
      });
  };

  const handleUserClick = (user) => {
    setSelectedUser(user);
  };

  return (
    <>
      <div className="rider">
        <div className="rider1">
          <div className="rider2">
            <div className="rider3">
              <h6>Live Chat</h6>
            </div>
          </div>

          <div className="livechart">
            <div className="livechart1">
              <div className="livechart2">
                <div className="livechart3">
                  <h5>Messages</h5>
                  <IoIosArrowDown color="#000000" size={20} />
                  <p>12</p>
                </div>

                <div className="livechart4">
                  <img src={plus} alt="" />
                </div>
              </div>

              <div className="livechart6">
                <hr />
              </div>

              <div className="livechart5">
                <input type="search" placeholder="Search messages" />
              </div>

              <div className="livechart6">
                {users.map((user,i) => (
                  <div
                    className="livechart7"
                    key={i}
                    onClick={() => setUserIdByMe(user?._id)}
                  >
                    <div className="livechart8">
                      <div className="livechart852">
                        <img src={user.profilePicture} alt="" />
                      </div>
                      <div className="livechart9">
                        <h6>{user.name}</h6>
                        <p>
                          {user.message}
                          <span>ðŸ”¥</span>
                        </p>
                      </div>
                    </div>
                    <div className="livechart10">
                      <p>12m</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="livechart11">
              <div className="livechart12">
                {selectedUser && (
                  <div className="livechart13">
                    <div className="livechart14">
                      <img src={selectedUser.profilePicture} alt="" />
                    </div>
                    <div className="livechart15">
                      <h6>{selectedUser.name}</h6>
                      <div className="livechart16">
                        <div className="livechart17"></div>
                        <p>Online</p>
                      </div>
                    </div>
                  </div>
                )}

                {messages.map((message,i) => (
                  <div className="livechart18" key={i}>
                    <div className="livechart19">
                      <div className="livechart20">
                        <img src={message.image} alt="" />
                      </div>
                      <div className="livechart21">
                        <div className="livechart22">
                          <p>{message.message}</p>
                        </div>
                        <div className="livechart22">
                          <p>perfect! âœ…</p>
                        </div>
                        <div className="livechart22">
                          <p>Wow, this is really epic</p>
                        </div>
                      </div>
                    </div>
                    <div className="livechart24">
                      <div className="livechart21">
                        <div className="livechart23">
                          <p>hello</p>
                        </div>
                      </div>
                      <div className="livechart20">
                        <img src={chat} alt="" />
                      </div>
                    </div>
                  </div>
                ))}
                <div className="livechart25">
                  <div className="livechart26">
                    <div className="livechart27">
                      <img src={share} alt="" />
                    </div>
                    <div className="livechart28">
                      <input type="text" placeholder="Type a message" />
                      <img src={send} alt="" />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default HOC(LiveChart);
